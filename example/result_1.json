{
    "question_answer": "**问题：**\n\nFlink 中的 `TIMESTAMP` 和 `TIMESTAMP_LTZ` 数据类型有何不同？在不同的时区设置下，它们的显示结果会如何变化？\n\n**答案：**\n\n在 Flink 中，`TIMESTAMP` 和 `TIMESTAMP_LTZ` 是两种用于处理时间数据的不同数据类型，它们的主要区别在于是否包含时区信息。\n\n1. **TIMESTAMP 类型：**\n   - `TIMESTAMP(p)`（其中 `p` 是精度）是没有时区信息的时间戳，默认精度为 6。\n   - `TIMESTAMP` 类型表示一个具体的年、月、日、时、分、秒和小数秒。\n   - 例如，可以通过字符串字面量来指定 `TIMESTAMP` 值：`TIMESTAMP '1970-01-01 00:00:04.001'`。\n\n2. **TIMESTAMP_LTZ 类型：**\n   - `TIMESTAMP_LTZ(p)` 是包含本地时区的时间戳类型，默认精度也是 6。\n   - `TIMESTAMP_LTZ` 表示时间线上一个绝对时间点，存储为从 `1970-01-01T00:00:00Z` 开始的纪元毫秒数。\n   - `TIMESTAMP_LTZ` 值在计算和显示时会根据当前会话配置的本地时区进行解释。\n\n3. **时区设置对显示结果的影响：**\n   - 当时区设置为 `UTC` 时，`TIMESTAMP_LTZ` 显示为标准的协调世界时（UTC），例如：\n\n     ```sql\n     Flink SQL> SET 'table.local-time-zone' = 'UTC';\n     Flink SQL> SELECT * FROM T1;\n     +---------------------------+\n     | TO_TIMESTAMP_LTZ(4001, 3) |\n     +---------------------------+\n     |   1970-01-01 00:00:04.001 |\n     +---------------------------+\n     ```\n\n   - 当时区设置为 `Asia/Shanghai` 时，`TIMESTAMP_LTZ` 显示为上海的本地时间，时间会加上8小时的时差：\n\n     ```sql\n     Flink SQL> SET 'table.local-time-zone' = 'Asia/Shanghai';\n     Flink SQL> SELECT * FROM T1;\n     +---------------------------+\n     | TO_TIMESTAMP_LTZ(4001, 3) |\n     +---------------------------+\n     |   1970-01-01 08:00:04.001 |\n     +---------------------------+\n     ```\n\n综上所述，`TIMESTAMP` 是不考虑时区的时间表示，而 `TIMESTAMP_LTZ` 则会根据设定的本地时区进行显示和计算，因此在跨时区的业务场景中，使用 `TIMESTAMP_LTZ` 可以确保时间点的一致性。",
    "documents": [
        "dev/table/timezone.md",
        "dev/table/hive-compatibility/hive-dialect/show.md"
    ]
}